@model Emvisi.Models.RegisterGymModel

@{
    ViewBag.Title = "Create";
}

<div class="side-by-side">
    @using (Ajax.BeginForm("Create", "Gyms",
                    new AjaxOptions
                    {
                        UpdateTargetId = "head-content",
                        InsertionMode = System.Web.Mvc.Ajax.InsertionMode.Replace,
                        HttpMethod = "POST",
                        LoadingElementId = "loader-overlay",
                        OnBegin = "onBeginLoadView",
                        OnComplete = "onCompleteLoadView"
                    }))
    {
        @Html.AntiForgeryToken()
        <h2>Describe Your Gym</h2>
        <img id="logoImage" src="~/Content/Media/logo-placeholder.jpg" />
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <script>
                function readURL(input) {
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#logoImage')
                                .attr('src', e.target.result)
                        };

                        reader.readAsDataURL(input.files[0]);
                    }
                }
            </script>

            <div class="form-group">
                    <input type="file" name="FileUpload" value="Click to upload logo" onchange="readURL(this);" />
                    @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                    @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
            
            
                <h4>@Html.LabelFor(model => model.Description)</h4>
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control multi-line"}, @rows = "5", @cols = "120" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })


            <h4>Contact Infromation</h4>
            <div class="form-group">
                    <div class=".col-md-4">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class=".col-md-4">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
            </div>   
            <div class="form-group">
                    <div class="col-md-10">
                        <input type="submit" value="Procceed" />
                    </div>
                </div>
</div>
    }
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
